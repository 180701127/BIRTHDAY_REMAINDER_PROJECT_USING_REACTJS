{"ast":null,"code":"var _jsxFileName = \"F:\\\\IT-VEDANT-INSTITUTE\\\\Mern_Assignments\\\\Github_Card_List_App\\\\birthday-remainder\\\\src\\\\components\\\\EmpData.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmpData = ({\n  employee\n}) => {\n  let currDate = new Date();\n  let newDate = currDate.getDate();\n  let newDate_1 = newDate < 10 ? `0${newDate}` : `${newDate}`;\n  let month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let current_Month = month[currDate.getMonth()];\n  let actual_Date = `${newDate_1} ${current_Month}`;\n  return employee.map(({\n    id,\n    name,\n    dob,\n    age,\n    gender,\n    image\n  }) => {\n    let empDOB = dob;\n    if (empDOB === actual_Date) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"person\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emp_details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Gender: \", gender]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: dob\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Age: \", age]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    } else {\n      return null;\n    }\n  });\n};\n_c = EmpData;\nexport default EmpData;\nvar _c;\n$RefreshReg$(_c, \"EmpData\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","EmpData","employee","currDate","Date","newDate","getDate","newDate_1","month","current_Month","getMonth","actual_Date","map","id","name","dob","age","gender","image","empDOB","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/IT-VEDANT-INSTITUTE/Mern_Assignments/Github_Card_List_App/birthday-remainder/src/components/EmpData.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst EmpData = ({ employee }) => {\r\n  let currDate = new Date();\r\n  let newDate = currDate.getDate();\r\n  let newDate_1 = newDate < 10 ? `0${newDate}` : `${newDate}`;\r\n  let month = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n  ]\r\n\r\n  let current_Month = month[currDate.getMonth()];\r\n\r\n  let actual_Date = `${newDate_1} ${current_Month}`;\r\n  \r\n  return employee.map(({id,name,dob,age,gender,image})=>{\r\n    let empDOB = dob;\r\n    if(empDOB === actual_Date){\r\n      return (\r\n        <div key={id} className=\"person\">\r\n\r\n          <img src={image} alt={name} />\r\n          <div className=\"emp_details\">\r\n            <h4>{name}</h4>\r\n            <p>Gender: {gender}</p>\r\n            <p>{dob}</p>\r\n            <h4>Age: {age}</h4>\r\n          </div>\r\n\r\n        </div>\r\n      )\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  \r\n};\r\n\r\nexport default EmpData;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAChC,IAAIC,QAAQ,GAAG,IAAIC,IAAI,CAAC,CAAC;EACzB,IAAIC,OAAO,GAAGF,QAAQ,CAACG,OAAO,CAAC,CAAC;EAChC,IAAIC,SAAS,GAAGF,OAAO,GAAG,EAAE,GAAI,IAAGA,OAAQ,EAAC,GAAI,GAAEA,OAAQ,EAAC;EAC3D,IAAIG,KAAK,GAAG,CACV,SAAS,EACT,UAAU,EACV,OAAO,EACP,OAAO,EACP,KAAK,EACL,MAAM,EACN,MAAM,EACN,QAAQ,EACR,WAAW,EACX,SAAS,EACT,UAAU,EACV,UAAU,CACX;EAED,IAAIC,aAAa,GAAGD,KAAK,CAACL,QAAQ,CAACO,QAAQ,CAAC,CAAC,CAAC;EAE9C,IAAIC,WAAW,GAAI,GAAEJ,SAAU,IAAGE,aAAc,EAAC;EAEjD,OAAOP,QAAQ,CAACU,GAAG,CAAC,CAAC;IAACC,EAAE;IAACC,IAAI;IAACC,GAAG;IAACC,GAAG;IAACC,MAAM;IAACC;EAAK,CAAC,KAAG;IACpD,IAAIC,MAAM,GAAGJ,GAAG;IAChB,IAAGI,MAAM,KAAKR,WAAW,EAAC;MACxB,oBACEX,OAAA;QAAcoB,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBAE9BrB,OAAA;UAAKsB,GAAG,EAAEJ,KAAM;UAACK,GAAG,EAAET;QAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9B3B,OAAA;UAAKoB,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BrB,OAAA;YAAAqB,QAAA,EAAKP;UAAI;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACf3B,OAAA;YAAAqB,QAAA,GAAG,UAAQ,EAACJ,MAAM;UAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvB3B,OAAA;YAAAqB,QAAA,EAAIN;UAAG;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZ3B,OAAA;YAAAqB,QAAA,GAAI,OAAK,EAACL,GAAG;UAAA;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC;MAAA,GAREd,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUP,CAAC;IAEV,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF,CAAC,CAAC;AAGJ,CAAC;AAACC,EAAA,GA7CI3B,OAAO;AA+Cb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}